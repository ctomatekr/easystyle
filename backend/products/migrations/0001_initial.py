# Generated by Django 5.2.6 on 2025-09-13 08:15

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("description", models.TextField(blank=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="brands/")),
                ("website", models.URLField(blank=True)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("is_premium", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "easystyle_brands",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("name_en", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("sort_order", models.PositiveIntegerField(default=0)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "easystyle_product_categories",
                "ordering": ["sort_order", "name_en"],
            },
        ),
        migrations.CreateModel(
            name="Store",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("website", models.URLField()),
                ("api_endpoint", models.URLField(blank=True)),
                (
                    "commission_rate",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=5),
                ),
                ("is_partner", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("api_key", models.CharField(blank=True, max_length=500)),
                ("api_secret", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "easystyle_stores",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=500)),
                ("description", models.TextField(blank=True)),
                (
                    "original_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "sale_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("currency", models.CharField(default="KRW", max_length=3)),
                ("color", models.CharField(blank=True, max_length=100)),
                ("material", models.CharField(blank=True, max_length=200)),
                ("sizes_available", models.JSONField(blank=True, default=list)),
                ("recommended_size", models.CharField(blank=True, max_length=50)),
                ("main_image", models.URLField()),
                ("additional_images", models.JSONField(blank=True, default=list)),
                (
                    "ai_processed_image",
                    models.ImageField(
                        blank=True, null=True, upload_to="products/ai_processed/"
                    ),
                ),
                ("style_tags", models.JSONField(blank=True, default=list)),
                ("season", models.CharField(blank=True, max_length=20)),
                ("occasion", models.JSONField(blank=True, default=list)),
                ("external_id", models.CharField(blank=True, max_length=200)),
                ("product_url", models.URLField()),
                ("affiliate_url", models.URLField(blank=True)),
                ("is_available", models.BooleanField(default=True)),
                ("stock_status", models.CharField(default="in_stock", max_length=50)),
                ("last_updated_price", models.DateTimeField(auto_now=True)),
                (
                    "rating",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=3,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(5.0),
                        ],
                    ),
                ),
                ("review_count", models.PositiveIntegerField(default=0)),
                ("ai_confidence_score", models.FloatField(blank=True, null=True)),
                ("ai_style_match_score", models.FloatField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.brand",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.productcategory",
                    ),
                ),
                (
                    "store",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.store",
                    ),
                ),
            ],
            options={
                "db_table": "easystyle_products",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0)),
                ("click_count", models.PositiveIntegerField(default=0)),
                ("wishlist_count", models.PositiveIntegerField(default=0)),
                ("recommendation_count", models.PositiveIntegerField(default=0)),
                ("times_used_in_styling", models.PositiveIntegerField(default=0)),
                ("average_style_rating", models.FloatField(blank=True, null=True)),
                ("popular_combinations", models.JSONField(blank=True, default=list)),
                ("age_group_popularity", models.JSONField(blank=True, default=dict)),
                ("style_category_fit", models.JSONField(blank=True, default=dict)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "easystyle_product_analytics",
            },
        ),
        migrations.CreateModel(
            name="StyleRecommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("style_prompt", models.TextField()),
                (
                    "generated_image",
                    models.ImageField(upload_to="style_recommendations/"),
                ),
                ("ai_description", models.TextField()),
                ("confidence_score", models.FloatField()),
                (
                    "user_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("user_feedback", models.TextField(blank=True)),
                ("processing_time", models.FloatField(blank=True, null=True)),
                ("algorithm_version", models.CharField(default="1.0", max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "products",
                    models.ManyToManyField(
                        related_name="recommended_in", to="products.product"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="product_style_recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "easystyle_style_recommendations",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserWishlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added_at", models.DateTimeField(auto_now_add=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlisted_by",
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "easystyle_user_wishlist",
                "ordering": ["-added_at"],
            },
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["category", "brand"], name="easystyle_p_categor_42be7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["store", "is_available"], name="easystyle_p_store_i_c81c56_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                fields=["created_at"], name="easystyle_p_created_ce3b08_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userwishlist",
            unique_together={("user", "product")},
        ),
    ]
