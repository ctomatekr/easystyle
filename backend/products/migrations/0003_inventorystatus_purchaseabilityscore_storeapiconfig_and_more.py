# Generated by Django 5.2.6 on 2025-09-17 05:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("products", "0002_cart_cartitem"),
    ]

    operations = [
        migrations.CreateModel(
            name="InventoryStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "stock_status",
                    models.CharField(
                        choices=[
                            ("in_stock", "재고 있음"),
                            ("low_stock", "재고 부족"),
                            ("out_of_stock", "품절"),
                            ("discontinued", "단종"),
                            ("pre_order", "예약 주문"),
                            ("unknown", "확인 불가"),
                        ],
                        default="unknown",
                        max_length=20,
                    ),
                ),
                (
                    "stock_quantity",
                    models.PositiveIntegerField(
                        blank=True, help_text="실제 재고 수량", null=True
                    ),
                ),
                (
                    "size_stock",
                    models.JSONField(
                        blank=True, default=dict, help_text="사이즈별 재고 정보"
                    ),
                ),
                (
                    "availability_status",
                    models.CharField(
                        choices=[
                            ("available", "구매 가능"),
                            ("unavailable", "구매 불가"),
                            ("restricted", "구매 제한"),
                            ("checking", "확인 중"),
                        ],
                        default="checking",
                        max_length=20,
                    ),
                ),
                (
                    "is_purchasable",
                    models.BooleanField(default=False, help_text="실제 구매 가능 여부"),
                ),
                (
                    "current_price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("price_changed", models.BooleanField(default=False)),
                ("price_change_percentage", models.FloatField(blank=True, null=True)),
                ("last_checked_at", models.DateTimeField(auto_now=True)),
                ("last_available_at", models.DateTimeField(blank=True, null=True)),
                (
                    "consecutive_unavailable_count",
                    models.PositiveIntegerField(default=0),
                ),
                ("last_error_message", models.TextField(blank=True)),
                ("check_failed_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_status",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "재고 상태",
                "verbose_name_plural": "재고 상태들",
                "db_table": "easystyle_inventory_status",
            },
        ),
        migrations.CreateModel(
            name="PurchaseabilityScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "overall_score",
                    models.PositiveIntegerField(
                        default=0, help_text="전체 구매 가능성 점수"
                    ),
                ),
                (
                    "availability_score",
                    models.PositiveIntegerField(
                        default=0, help_text="재고 가용성 점수"
                    ),
                ),
                (
                    "reliability_score",
                    models.PositiveIntegerField(
                        default=0, help_text="스토어 신뢰도 점수"
                    ),
                ),
                (
                    "price_stability_score",
                    models.PositiveIntegerField(
                        default=0, help_text="가격 안정성 점수"
                    ),
                ),
                (
                    "delivery_score",
                    models.PositiveIntegerField(
                        default=0, help_text="배송 가능성 점수"
                    ),
                ),
                (
                    "historical_availability_rate",
                    models.FloatField(default=0.0, help_text="과거 가용성 비율"),
                ),
                (
                    "average_stock_duration_days",
                    models.PositiveIntegerField(
                        default=0, help_text="평균 재고 유지 기간"
                    ),
                ),
                (
                    "price_change_frequency",
                    models.PositiveIntegerField(default=0, help_text="가격 변동 빈도"),
                ),
                (
                    "predicted_stock_out_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("predicted_restock_date", models.DateTimeField(blank=True, null=True)),
                (
                    "confidence_level",
                    models.FloatField(default=0.0, help_text="예측 신뢰도"),
                ),
                (
                    "recommendation_priority",
                    models.PositiveIntegerField(
                        default=50, help_text="추천 우선순위 (1-100)"
                    ),
                ),
                ("last_calculated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="purchaseability_score",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "verbose_name": "구매 가능성 점수",
                "verbose_name_plural": "구매 가능성 점수들",
                "db_table": "easystyle_purchaseability_scores",
                "ordering": ["-overall_score"],
            },
        ),
        migrations.CreateModel(
            name="StoreApiConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "api_type",
                    models.CharField(
                        choices=[
                            ("rest_api", "REST API"),
                            ("graphql", "GraphQL"),
                            ("scraping", "웹 스크래핑"),
                            ("rss_feed", "RSS 피드"),
                        ],
                        default="scraping",
                        max_length=20,
                    ),
                ),
                ("inventory_check_url", models.URLField(blank=True)),
                (
                    "product_detail_url_pattern",
                    models.CharField(blank=True, max_length=500),
                ),
                (
                    "inventory_selector",
                    models.CharField(
                        blank=True, help_text="재고 정보 CSS 셀렉터", max_length=200
                    ),
                ),
                (
                    "price_selector",
                    models.CharField(
                        blank=True, help_text="가격 정보 CSS 셀렉터", max_length=200
                    ),
                ),
                (
                    "availability_selector",
                    models.CharField(
                        blank=True, help_text="구매 가능 여부 셀렉터", max_length=200
                    ),
                ),
                ("request_headers", models.JSONField(blank=True, default=dict)),
                (
                    "request_delay_seconds",
                    models.PositiveIntegerField(default=1, help_text="요청 간격(초)"),
                ),
                ("max_retries", models.PositiveIntegerField(default=3)),
                ("timeout_seconds", models.PositiveIntegerField(default=30)),
                (
                    "success_indicators",
                    models.JSONField(
                        blank=True, default=list, help_text="성공 판단 키워드"
                    ),
                ),
                (
                    "stock_keywords",
                    models.JSONField(
                        blank=True, default=dict, help_text="재고 상태 키워드 매핑"
                    ),
                ),
                (
                    "unavailable_keywords",
                    models.JSONField(
                        blank=True, default=list, help_text="품절/구매불가 키워드"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("last_successful_check", models.DateTimeField(blank=True, null=True)),
                ("consecutive_failures", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "store",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="api_config",
                        to="products.store",
                    ),
                ),
            ],
            options={
                "verbose_name": "스토어 API 설정",
                "verbose_name_plural": "스토어 API 설정들",
                "db_table": "easystyle_store_api_configs",
            },
        ),
        migrations.CreateModel(
            name="InventoryCheckLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "check_type",
                    models.CharField(
                        choices=[
                            ("scheduled", "정기 확인"),
                            ("manual", "수동 확인"),
                            ("api_webhook", "API 웹훅"),
                            ("user_request", "사용자 요청"),
                            ("style_recommendation", "스타일 추천 시"),
                        ],
                        default="scheduled",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "성공"),
                            ("failed", "실패"),
                            ("partial", "부분 성공"),
                            ("timeout", "타임아웃"),
                        ],
                        max_length=10,
                    ),
                ),
                ("previous_stock_status", models.CharField(blank=True, max_length=20)),
                ("new_stock_status", models.CharField(blank=True, max_length=20)),
                (
                    "response_time_ms",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("api_response_data", models.JSONField(blank=True, default=dict)),
                ("error_message", models.TextField(blank=True)),
                (
                    "price_before",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "price_after",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("availability_changed", models.BooleanField(default=False)),
                ("checked_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inventory_checks",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "db_table": "easystyle_inventory_check_logs",
                "ordering": ["-checked_at"],
                "indexes": [
                    models.Index(
                        fields=["product", "-checked_at"],
                        name="easystyle_i_product_66d23d_idx",
                    ),
                    models.Index(
                        fields=["status", "-checked_at"],
                        name="easystyle_i_status_35f9b0_idx",
                    ),
                ],
            },
        ),
    ]
